{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pavan/Desktop/filmstake-new/frontend/components/home/HeroSection.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport gsap from 'gsap';\r\nimport Link from 'next/link';\r\nimport { slides } from '@/utils/helper';\r\n\r\nconst HeroSection = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [isAnimating, setIsAnimating] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const previewRefs = useRef([]);\r\n    const bgRef = useRef(null);\r\n    const mainImageRef = useRef(null);\r\n    const castContainerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initial setup of images\r\n        gsap.set('.preview-image', {\r\n            scale: 0.8,\r\n            opacity: 0.7,\r\n            filter: 'grayscale(100%)',\r\n            transformOrigin: 'center center'\r\n        });\r\n\r\n        gsap.set(`.preview-image-${activeIndex}`, {\r\n            scale: 1,\r\n            opacity: 1,\r\n            filter: 'grayscale(0%)'\r\n        });\r\n\r\n        // Set up auto-slide interval\r\n        const interval = setInterval(() => {\r\n            if (!isPaused && !isAnimating) {\r\n                const nextIndex = (activeIndex + 1) % slides.length;\r\n                animateSlideChange(nextIndex);\r\n            }\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [activeIndex, isPaused, isAnimating]);\r\n\r\n    const animateSlideChange = (newIndex) => {\r\n        if (isAnimating || newIndex === activeIndex) return;\r\n        \r\n        setIsAnimating(true);\r\n\r\n        // Fade out cast container and main image\r\n        gsap.to([mainImageRef.current, castContainerRef.current], {\r\n            opacity: 0,\r\n            duration: 0.4,\r\n            ease: \"power2.inOut\",\r\n            onComplete: () => {\r\n                setActiveIndex(newIndex);\r\n                // Fade in cast container and main image\r\n                gsap.to([mainImageRef.current, castContainerRef.current], {\r\n                    opacity: 1,\r\n                    duration: 0.4,\r\n                    ease: \"power2.inOut\",\r\n                    onComplete: () => setIsAnimating(false)\r\n                });\r\n            }\r\n        });\r\n\r\n        // Animate preview images\r\n        gsap.to('.preview-image', {\r\n            scale: 0.8,\r\n            opacity: 0.3,\r\n            filter: 'grayscale(100%)',\r\n            duration: 0.4,\r\n            ease: \"power2.inOut\"\r\n        });\r\n\r\n        gsap.to(`.preview-image-${newIndex}`, {\r\n            scale: 1,\r\n            opacity: 1,\r\n            filter: 'grayscale(0%)',\r\n            duration: 0.4,\r\n            ease: \"power2.inOut\"\r\n        });\r\n    };\r\n\r\n    const handleMouseEnter = () => setIsPaused(true);\r\n    const handleMouseLeave = () => setIsPaused(false);\r\n\r\n    const getSlideBackground = (index) => {\r\n        const defaultColor = \"128, 128, 128\";\r\n        const color = slides[index]?.bgColor || defaultColor;\r\n        \r\n        return `\r\n            radial-gradient(\r\n                circle at top,\r\n                rgba(${color}, 0.3) 0%,\r\n                transparent 70%\r\n            ),\r\n            radial-gradient(\r\n                circle at bottom,\r\n                rgba(${color}, 0.2) 0%,\r\n                transparent 70%\r\n            )\r\n        `;\r\n    };\r\n\r\n    const CastCard = ({ data }) => (\r\n        <div \r\n            className=\"cast-card w-full h-48 bg-black/30 rounded-lg overflow-hidden group cursor-pointer hover:bg-black/40 transition-all duration-300\"\r\n            onMouseEnter={handleMouseEnter}\r\n            onMouseLeave={handleMouseLeave}\r\n        >\r\n            <div className=\"relative h-full\">\r\n                <img\r\n                    src={data.image}\r\n                    alt={data.name}\r\n                    className=\"w-full h-full object-cover opacity-90 transition-transform duration-700 group-hover:scale-105\"\r\n                />\r\n                <div className=\"absolute inset-0 flex flex-col items-center justify-end p-4 md:p-6 text-center bg-gradient-to-t from-black/60 to-transparent\">\r\n                    <h2 className=\"text-white text-lg md:text-xl font-medium tracking-wider transform group-hover:scale-105 transition-transform\">\r\n                        {data.name}\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const PreviewImage = ({ slide, index }) => (\r\n        <div\r\n            ref={el => previewRefs.current[index] = el}\r\n            className={`preview-image preview-image-${index} relative group cursor-pointer`}\r\n            onClick={() => animateSlideChange(index)}\r\n            onMouseEnter={handleMouseEnter}\r\n            onMouseLeave={handleMouseLeave}\r\n        >\r\n            <div className={`\r\n                w-20 h-20 \r\n                sm:w-24 sm:h-24 \r\n                lg:w-28 lg:h-28\r\n                xl:w-32 xl:h-32\r\n                rounded-lg overflow-hidden\r\n                transition-all duration-300\r\n                ${activeIndex === index ? 'ring-2 ring-white/50' : ''}\r\n            `}>\r\n                <img\r\n                    src={slide.image}\r\n                    alt={`Preview ${index + 1}`}\r\n                    className=\"w-full h-full object-cover transition-all duration-500\"\r\n                />\r\n                <div className={`\r\n                    absolute inset-0 \r\n                    bg-black/40 \r\n                    transition-opacity duration-300\r\n                    ${activeIndex === index ? 'opacity-0' : 'opacity-100'}\r\n                    group-hover:opacity-0\r\n                `}/>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"w-full min-h-screen bg-black relative pt-[15vh] md:pt-[18vh] pb-5 overflow-hidden\">\r\n            <div \r\n                ref={bgRef}\r\n                className=\"absolute inset-0 opacity-90\"\r\n                style={{\r\n                    background: getSlideBackground(activeIndex)\r\n                }}\r\n            />\r\n            \r\n            <div ref={containerRef} className=\"relative max-w-[1920px] mx-auto px-4 md:px-8 lg:px-12\">\r\n                <div className=\"w-full flex flex-col lg:flex-row items-center justify-center gap-8 lg:gap-12\">\r\n                    <div \r\n                        ref={castContainerRef}\r\n                        className=\"order-2 lg:order-1 w-full lg:w-auto\"\r\n                    >\r\n                        <div className=\"grid grid-cols-2 lg:grid-cols-1 gap-4 lg:gap-6\">\r\n                            <CastCard data={slides[activeIndex].actor} />\r\n                            <CastCard data={slides[activeIndex].actress} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"order-1 lg:order-2 w-full\">\r\n                        <Link href={slides[activeIndex].link}>\r\n                            <div \r\n                                className=\"relative aspect-[16/9] w-full max-w-[800px] mx-auto overflow-hidden rounded-lg cursor-pointer group\"\r\n                                onMouseEnter={handleMouseEnter}\r\n                                onMouseLeave={handleMouseLeave}\r\n                            >\r\n                                <img\r\n                                    ref={mainImageRef}\r\n                                    src={slides[activeIndex].image}\r\n                                    className=\"w-full h-full object-cover opacity-90 transition-transform duration-700 group-hover:scale-105\"\r\n                                />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"order-3 flex flex-row lg:flex-col items-center justify-center gap-4 lg:gap-6\">\r\n                        {slides.map((slide, index) => (\r\n                            <PreviewImage key={slide.id} slide={slide} index={index} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroSection"],"names":[],"mappings":"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"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}